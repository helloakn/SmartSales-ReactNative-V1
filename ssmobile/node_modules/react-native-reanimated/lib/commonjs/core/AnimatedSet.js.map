{"version":3,"sources":["AnimatedSet.js"],"names":["AnimatedSet","AnimatedNode","constructor","what","value","type","_constant","_what","_value","toString","__nodeID","__onEvaluate","newValue","setValue","createAnimatedSet"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;AAEA,MAAMA,WAAN,SAA0BC,qBAA1B,CAAuC;AAIrCC,EAAAA,WAAW,CAACC,IAAD,EAAOC,KAAP,EAAc;AACvB,4BACED,IAAI,YAAYF,qBADlB,2FAEoFE,IAFpF;AAIA,4BACEC,KAAK,YAAYH,qBADnB,8GAEuGG,KAFvG;AAIA,UAAM;AAAEC,MAAAA,IAAI,EAAE,KAAR;AAAeF,MAAAA,IAAf;AAAqBC,MAAAA;AAArB,KAAN,EAAoC,CAACA,KAAD,CAApC;;AATuB;;AAAA;;AAUvB,4BAAU,CAACD,IAAI,CAACG,SAAhB,EAA2B,oCAA3B;AACA,SAAKC,KAAL,GAAaJ,IAAb;AACA,SAAKK,MAAL,GAAcJ,KAAd;AACD;;AAEDK,EAAAA,QAAQ,GAAG;AACT,sCAA2B,KAAKC,QAAhC;AACD;;AAEDC,EAAAA,YAAY,GAAG;AACb,UAAMC,QAAQ,GAAG,cAAI,KAAKJ,MAAT,CAAjB;;AACA,SAAKD,KAAL,CAAWM,QAAX,CAAoBD,QAApB;;AACA,WAAOA,QAAP;AACD;;AA3BoC;;AA8BhC,SAASE,iBAAT,CAA2BX,IAA3B,EAAiCC,KAAjC,EAAwC;AAC7C,SAAO,IAAIJ,WAAJ,CAAgBG,IAAhB,EAAsB,0BAAMC,KAAN,CAAtB,CAAP;AACD","sourcesContent":["import AnimatedNode from './AnimatedNode';\nimport invariant from 'fbjs/lib/invariant';\nimport { val } from '../val';\nimport { adapt } from '../core/AnimatedBlock';\n\nclass AnimatedSet extends AnimatedNode {\n  _what;\n  _value;\n\n  constructor(what, value) {\n    invariant(\n      what instanceof AnimatedNode,\n      `Reanimated: Animated.set first argument should be of type AnimatedNode but got ${what}`\n    );\n    invariant(\n      value instanceof AnimatedNode,\n      `Reanimated: Animated.set second argument should be of type AnimatedNode, String or Number but got ${value}`\n    );\n    super({ type: 'set', what, value }, [value]);\n    invariant(!what._constant, 'Value to be set cannot be constant');\n    this._what = what;\n    this._value = value;\n  }\n\n  toString() {\n    return `AnimatedSet, id: ${this.__nodeID}`;\n  }\n\n  __onEvaluate() {\n    const newValue = val(this._value);\n    this._what.setValue(newValue);\n    return newValue;\n  }\n}\n\nexport function createAnimatedSet(what, value) {\n  return new AnimatedSet(what, adapt(value));\n}\n"]}