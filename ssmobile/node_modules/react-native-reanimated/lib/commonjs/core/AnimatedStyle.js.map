{"version":3,"sources":["AnimatedStyle.js"],"names":["sanitizeStyle","inputStyle","style","key","value","AnimatedNode","__nodeID","createOrReuseStyleNode","oldNode","StyleSheet","flatten","transform","_style","config","_config","AnimatedStyle","constructor","type","Object","values","toString","_walkStyleAndGetAnimatedValues","updatedStyle","__getValue","Array","isArray","__onEvaluate"],"mappings":";;;;;;;;AAAA;;AAEA;;AACA;;AAEA;;;;;;;;;;AAEA,SAASA,aAAT,CAAuBC,UAAvB,EAAmC;AACjC,QAAMC,KAAK,GAAG,EAAd;;AACA,OAAK,MAAMC,GAAX,IAAkBF,UAAlB,EAA8B;AAC5B,UAAMG,KAAK,GAAGH,UAAU,CAACE,GAAD,CAAxB;;AACA,QAAIC,KAAK,YAAYC,qBAArB,EAAmC;AACjCH,MAAAA,KAAK,CAACC,GAAD,CAAL,GAAaC,KAAK,CAACE,QAAnB;AACD;AACF;;AACD,SAAOJ,KAAP;AACD;;AAEM,SAASK,sBAAT,CAAgCL,KAAhC,EAAuCM,OAAvC,EAAgD;AACrDN,EAAAA,KAAK,GAAGO,wBAAWC,OAAX,CAAmBR,KAAnB,KAA6B,EAArC;;AACA,MAAIA,KAAK,CAACS,SAAV,EAAqB;AACnBT,IAAAA,KAAK,mCACAA,KADA;AAEHS,MAAAA,SAAS,EAAE,mDACTT,KAAK,CAACS,SADG,EAETH,OAAO,IAAIA,OAAO,CAACI,MAAR,CAAeD,SAFjB;AAFR,MAAL;AAOD;;AACD,QAAME,MAAM,GAAGb,aAAa,CAACE,KAAD,CAA5B;;AACA,MAAIM,OAAO,IAAI,uBAAUK,MAAV,EAAkBL,OAAO,CAACM,OAA1B,CAAf,EAAmD;AACjD,WAAON,OAAP;AACD;;AACD,SAAO,IAAIO,aAAJ,CAAkBb,KAAlB,EAAyBW,MAAzB,CAAP;AACD;AAED;;;;;;AAIe,MAAME,aAAN,SAA4BV,qBAA5B,CAAyC;AACtDW,EAAAA,WAAW,CAACd,KAAD,EAAQW,MAAR,EAAgB;AACzB,UAAM;AAAEI,MAAAA,IAAI,EAAE,OAAR;AAAiBf,MAAAA,KAAK,EAAEW;AAAxB,KAAN,EAAwCK,MAAM,CAACC,MAAP,CAAcjB,KAAd,CAAxC;AACA,SAAKY,OAAL,GAAeD,MAAf;AACA,SAAKD,MAAL,GAAcV,KAAd;AACD;;AAEDkB,EAAAA,QAAQ,GAAG;AACT,wCAA6B,KAAKd,QAAlC;AACD;;AAEDe,EAAAA,8BAA8B,CAACnB,KAAD,EAAQ;AACpC,UAAMoB,YAAY,GAAG,EAArB;;AACA,SAAK,MAAMnB,GAAX,IAAkBD,KAAlB,EAAyB;AACvB,YAAME,KAAK,GAAGF,KAAK,CAACC,GAAD,CAAnB;;AACA,UAAIC,KAAK,YAAYC,qBAArB,EAAmC;AACjCiB,QAAAA,YAAY,CAACnB,GAAD,CAAZ,GAAoBC,KAAK,CAACmB,UAAN,EAApB;AACD,OAFD,MAEO,IAAInB,KAAK,IAAI,CAACoB,KAAK,CAACC,OAAN,CAAcrB,KAAd,CAAV,IAAkC,OAAOA,KAAP,KAAiB,QAAvD,EAAiE;AACtE;AACAkB,QAAAA,YAAY,CAACnB,GAAD,CAAZ,GAAoB,KAAKkB,8BAAL,CAAoCjB,KAApC,CAApB;AACD;AACF;;AACD,WAAOkB,YAAP;AACD;;AAEDI,EAAAA,YAAY,GAAG;AACb,WAAO,KAAKL,8BAAL,CAAoC,KAAKT,MAAzC,CAAP;AACD;;AA3BqD","sourcesContent":["import { StyleSheet } from 'react-native';\n\nimport AnimatedNode from './AnimatedNode';\nimport { createOrReuseTransformNode } from './AnimatedTransform';\n\nimport deepEqual from 'fbjs/lib/areEqual';\n\nfunction sanitizeStyle(inputStyle) {\n  const style = {};\n  for (const key in inputStyle) {\n    const value = inputStyle[key];\n    if (value instanceof AnimatedNode) {\n      style[key] = value.__nodeID;\n    }\n  }\n  return style;\n}\n\nexport function createOrReuseStyleNode(style, oldNode) {\n  style = StyleSheet.flatten(style) || {};\n  if (style.transform) {\n    style = {\n      ...style,\n      transform: createOrReuseTransformNode(\n        style.transform,\n        oldNode && oldNode._style.transform\n      ),\n    };\n  }\n  const config = sanitizeStyle(style);\n  if (oldNode && deepEqual(config, oldNode._config)) {\n    return oldNode;\n  }\n  return new AnimatedStyle(style, config);\n}\n\n/**\n * AnimatedStyle should never be directly instantiated, use createOrReuseStyleNode\n * in order to make a new instance of this node.\n */\nexport default class AnimatedStyle extends AnimatedNode {\n  constructor(style, config) {\n    super({ type: 'style', style: config }, Object.values(style));\n    this._config = config;\n    this._style = style;\n  }\n\n  toString() {\n    return `AnimatedStyle, id: ${this.__nodeID}`;\n  }\n\n  _walkStyleAndGetAnimatedValues(style) {\n    const updatedStyle = {};\n    for (const key in style) {\n      const value = style[key];\n      if (value instanceof AnimatedNode) {\n        updatedStyle[key] = value.__getValue();\n      } else if (value && !Array.isArray(value) && typeof value === 'object') {\n        // Support animating nested values (for example: shadowOffset.height)\n        updatedStyle[key] = this._walkStyleAndGetAnimatedValues(value);\n      }\n    }\n    return updatedStyle;\n  }\n\n  __onEvaluate() {\n    return this._walkStyleAndGetAnimatedValues(this._style);\n  }\n}\n"]}