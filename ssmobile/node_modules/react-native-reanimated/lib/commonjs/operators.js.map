{"version":3,"sources":["operators.js"],"names":["operator","createAnimatedOperator","add","sub","multiply","divide","pow","modulo","sqrt","log","sin","cos","exp","round","lessThan","eq","greaterThan","lessOrEq","greaterOrEq","neq","and","or","defined","not","tan","acos","asin","atan","abs","ceil","floor","max","min"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,QAAQ,GAAGC,wCAAjB;AAEO,MAAMC,GAAG,GAAGF,QAAQ,CAAC,KAAD,CAApB;;AACA,MAAMG,GAAG,GAAGH,QAAQ,CAAC,KAAD,CAApB;;AACA,MAAMI,QAAQ,GAAGJ,QAAQ,CAAC,UAAD,CAAzB;;AACA,MAAMK,MAAM,GAAGL,QAAQ,CAAC,QAAD,CAAvB;;AACA,MAAMM,GAAG,GAAGN,QAAQ,CAAC,KAAD,CAApB;;AACA,MAAMO,MAAM,GAAGP,QAAQ,CAAC,QAAD,CAAvB;;AACA,MAAMQ,IAAI,GAAGR,QAAQ,CAAC,MAAD,CAArB;;AACA,MAAMS,GAAG,GAAGT,QAAQ,CAAC,KAAD,CAApB;;AACA,MAAMU,GAAG,GAAGV,QAAQ,CAAC,KAAD,CAApB;;AACA,MAAMW,GAAG,GAAGX,QAAQ,CAAC,KAAD,CAApB;;AACA,MAAMY,GAAG,GAAGZ,QAAQ,CAAC,KAAD,CAApB;;AACA,MAAMa,KAAK,GAAGb,QAAQ,CAAC,OAAD,CAAtB;;AACA,MAAMc,QAAQ,GAAGd,QAAQ,CAAC,UAAD,CAAzB;;AACA,MAAMe,EAAE,GAAGf,QAAQ,CAAC,IAAD,CAAnB;;AACA,MAAMgB,WAAW,GAAGhB,QAAQ,CAAC,aAAD,CAA5B;;AACA,MAAMiB,QAAQ,GAAGjB,QAAQ,CAAC,UAAD,CAAzB;;AACA,MAAMkB,WAAW,GAAGlB,QAAQ,CAAC,aAAD,CAA5B;;AACA,MAAMmB,GAAG,GAAGnB,QAAQ,CAAC,KAAD,CAApB;;AACA,MAAMoB,GAAG,GAAGpB,QAAQ,CAAC,KAAD,CAApB;;AACA,MAAMqB,EAAE,GAAGrB,QAAQ,CAAC,IAAD,CAAnB;;AACA,MAAMsB,OAAO,GAAGtB,QAAQ,CAAC,SAAD,CAAxB;;AACA,MAAMuB,GAAG,GAAGvB,QAAQ,CAAC,KAAD,CAApB;;AACA,MAAMwB,GAAG,GAAGxB,QAAQ,CAAC,KAAD,CAApB;;AACA,MAAMyB,IAAI,GAAGzB,QAAQ,CAAC,MAAD,CAArB;;AACA,MAAM0B,IAAI,GAAG1B,QAAQ,CAAC,MAAD,CAArB;;AACA,MAAM2B,IAAI,GAAG3B,QAAQ,CAAC,MAAD,CAArB;;AACA,MAAM4B,GAAG,GAAG5B,QAAQ,CAAC,KAAD,CAApB;;AACA,MAAM6B,IAAI,GAAG7B,QAAQ,CAAC,MAAD,CAArB;;AACA,MAAM8B,KAAK,GAAG9B,QAAQ,CAAC,OAAD,CAAtB;;AACA,MAAM+B,GAAG,GAAG/B,QAAQ,CAAC,KAAD,CAApB;;AACA,MAAMgC,GAAG,GAAGhC,QAAQ,CAAC,KAAD,CAApB","sourcesContent":["import { createAnimatedOperator } from './core/AnimatedOperator';\n\nconst operator = createAnimatedOperator;\n\nexport const add = operator('add');\nexport const sub = operator('sub');\nexport const multiply = operator('multiply');\nexport const divide = operator('divide');\nexport const pow = operator('pow');\nexport const modulo = operator('modulo');\nexport const sqrt = operator('sqrt');\nexport const log = operator('log');\nexport const sin = operator('sin');\nexport const cos = operator('cos');\nexport const exp = operator('exp');\nexport const round = operator('round');\nexport const lessThan = operator('lessThan');\nexport const eq = operator('eq');\nexport const greaterThan = operator('greaterThan');\nexport const lessOrEq = operator('lessOrEq');\nexport const greaterOrEq = operator('greaterOrEq');\nexport const neq = operator('neq');\nexport const and = operator('and');\nexport const or = operator('or');\nexport const defined = operator('defined');\nexport const not = operator('not');\nexport const tan = operator('tan');\nexport const acos = operator('acos');\nexport const asin = operator('asin');\nexport const atan = operator('atan');\nexport const abs = operator('abs');\nexport const ceil = operator('ceil');\nexport const floor = operator('floor');\nexport const max = operator('max');\nexport const min = operator('min');\n"]}