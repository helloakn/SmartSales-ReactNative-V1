{"version":3,"sources":["AnimatedFunction.js"],"names":["AnimatedNode","createAnimatedCallFunc","createAnimatedParam","val","invariant","AnimatedFunction","constructor","what","params","type","_what","__attach","__onEvaluate","toString","__nodeID","createAnimatedFunction","cb","Array","length","i","func","args","Error"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,SAASC,sBAAT,QAAuC,oBAAvC;AACA,SAASC,mBAAT,QAAoC,iBAApC;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAEA,MAAMC,gBAAN,SAA+BL,YAA/B,CAA4C;AAG1CM,EAAAA,WAAW,CAACC,IAAD,EAAO,GAAGC,MAAV,EAAkB;AAC3BJ,IAAAA,SAAS,CACPG,IAAI,YAAYP,YADT,gGAEgFO,IAFhF,EAAT;AAIA,UACE;AACEE,MAAAA,IAAI,EAAE,MADR;AAEEF,MAAAA;AAFF,KADF,EAKE,CAACA,IAAD,EAAO,GAAGC,MAAV,CALF;;AAL2B;;AAY3B,SAAKE,KAAL,GAAaH,IAAb;;AACA,SAAKI,QAAL;AACD;;AAEDC,EAAAA,YAAY,GAAG;AACb,WAAOT,GAAG,CAAC,KAAKO,KAAN,CAAV;AACD;;AAEDG,EAAAA,QAAQ,GAAG;AACT,2CAAgC,KAAKC,QAArC;AACD;;AAzByC;;AA4B5C,OAAO,SAASC,sBAAT,CAAgCC,EAAhC,EAAoC;AACzC,QAAMR,MAAM,GAAG,IAAIS,KAAJ,CAAUD,EAAE,CAACE,MAAb,CAAf;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,MAAM,CAACU,MAA3B,EAAmCC,CAAC,EAApC,EAAwC;AACtCX,IAAAA,MAAM,CAACW,CAAD,CAAN,GAAYjB,mBAAmB,EAA/B;AACD,GAJwC,CAKzC;;;AACA,QAAMK,IAAI,GAAGS,EAAE,CAAC,GAAGR,MAAJ,CAAf;AACA,QAAMY,IAAI,GAAG,IAAIf,gBAAJ,CAAqBE,IAArB,EAA2B,GAAGC,MAA9B,CAAb;AACA,SAAO,CAAC,GAAGa,IAAJ,KAAa;AAClB,QAAIA,IAAI,CAACH,MAAL,KAAgBV,MAAM,CAACU,MAA3B,EAAmC;AACjC,YAAM,IAAII,KAAJ,CACJ,mEACEd,MAAM,CAACU,MADT,GAEE,mBAFF,GAGEG,IAAI,CAACH,MAHP,GAIE,GALE,CAAN;AAOD;;AACD,WAAOjB,sBAAsB,CAACmB,IAAD,EAAOC,IAAP,EAAab,MAAb,CAA7B;AACD,GAXD;AAYD","sourcesContent":["import AnimatedNode from './AnimatedNode';\nimport { createAnimatedCallFunc } from './AnimatedCallFunc';\nimport { createAnimatedParam } from './AnimatedParam';\nimport { val } from '../val';\nimport invariant from 'fbjs/lib/invariant';\n\nclass AnimatedFunction extends AnimatedNode {\n  _what;\n\n  constructor(what, ...params) {\n    invariant(\n      what instanceof AnimatedNode,\n      `Reanimated: AnimatedCallFunc 'what' argument should be of type AnimatedNode but got ${what}`\n    );\n    super(\n      {\n        type: 'func',\n        what,\n      },\n      [what, ...params]\n    );\n    this._what = what;\n    this.__attach();\n  }\n\n  __onEvaluate() {\n    return val(this._what);\n  }\n\n  toString() {\n    return `AnimatedFunction, id: ${this.__nodeID}`;\n  }\n}\n\nexport function createAnimatedFunction(cb) {\n  const params = new Array(cb.length);\n  for (let i = 0; i < params.length; i++) {\n    params[i] = createAnimatedParam();\n  }\n  // eslint-disable-next-line standard/no-callback-literal\n  const what = cb(...params);\n  const func = new AnimatedFunction(what, ...params);\n  return (...args) => {\n    if (args.length !== params.length) {\n      throw new Error(\n        'Parameter mismatch when calling reanimated function. Expected ' +\n          params.length +\n          ' parameters, got ' +\n          args.length +\n          '.'\n      );\n    }\n    return createAnimatedCallFunc(func, args, params);\n  };\n}\n"]}