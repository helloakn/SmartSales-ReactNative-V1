{"version":3,"sources":["color.js"],"names":["Platform","add","cond","concat","lessThan","multiply","round","sub","proc","AnimatedNode","procColor","r","g","b","a","color","OS","Math","pow"],"mappings":"AAAA,SAASA,QAAT,QAAyB,cAAzB;AAEA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,MAApB,EAA4BC,QAA5B,EAAsCC,QAAtC,EAAgDC,KAAhD,EAAuDC,GAAvD,EAA4DC,IAA5D,QAAwE,SAAxE;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AAEA,MAAMC,SAAS,GAAGF,IAAI,CAAC,UAASG,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,EAAqB;AAC1C,QAAMC,KAAK,GAAGd,GAAG,CACfI,QAAQ,CAACS,CAAD,EAAI,KAAK,EAAT,CADO,EAEfT,QAAQ,CAACC,KAAK,CAACK,CAAD,CAAN,EAAW,KAAK,EAAhB,CAFO,EAGfN,QAAQ,CAACC,KAAK,CAACM,CAAD,CAAN,EAAW,KAAK,CAAhB,CAHO,EAIfN,KAAK,CAACO,CAAD,CAJU,CAAjB;;AAOA,MAAIb,QAAQ,CAACgB,EAAT,KAAgB,SAApB,EAA+B;AAC7B;AACA,WAAOd,IAAI,CACTE,QAAQ,CAACW,KAAD,EAAS,KAAK,EAAN,KAAc,CAAtB,CADC,EAETA,KAFS,EAGTR,GAAG,CAACQ,KAAD,EAAQE,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,EAAZ,CAAR,CAHM,CAAX;AAKD;;AACD,SAAOH,KAAP;AACD,CAjBqB,CAAtB;AAmBA,eAAe,SAASA,KAAT,CAAeJ,CAAf,EAAkBC,CAAlB,EAAqBC,CAArB,EAAwBC,CAAC,GAAG,CAA5B,EAA+B;AAC5C,MAAId,QAAQ,CAACgB,EAAT,KAAgB,KAApB,EAA2B;AACzB;AACA,WAAOb,MAAM,CAAC,OAAD,EAAUQ,CAAV,EAAa,GAAb,EAAkBC,CAAlB,EAAqB,GAArB,EAA0BC,CAA1B,EAA6B,GAA7B,EAAkCC,CAAlC,EAAqC,GAArC,CAAb;AACD;;AAED,MAAIA,CAAC,YAAYL,YAAjB,EAA+B;AAC7BK,IAAAA,CAAC,GAAGR,KAAK,CAACD,QAAQ,CAACS,CAAD,EAAI,GAAJ,CAAT,CAAT;AACD,GAFD,MAEO;AACLA,IAAAA,CAAC,GAAGG,IAAI,CAACX,KAAL,CAAWQ,CAAC,GAAG,GAAf,CAAJ;AACD;;AAED,SAAOJ,SAAS,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,CAAhB;AACD","sourcesContent":["import { Platform } from 'react-native';\n\nimport { add, cond, concat, lessThan, multiply, round, sub, proc } from '../base';\nimport AnimatedNode from '../core/AnimatedNode';\n\nconst procColor = proc(function(r, g, b, a) {\n  const color = add(\n    multiply(a, 1 << 24),\n    multiply(round(r), 1 << 16),\n    multiply(round(g), 1 << 8),\n    round(b)\n  );\n  \n  if (Platform.OS === 'android') {\n    // on Android color is represented as signed 32 bit int\n    return cond(\n      lessThan(color, (1 << 31) >>> 0),\n      color,\n      sub(color, Math.pow(2, 32))\n    );\n  }\n  return color;\n});\n\nexport default function color(r, g, b, a = 1) {\n  if (Platform.OS === 'web') {\n    // doesn't support bit shifting\n    return concat('rgba(', r, ',', g, ',', b, ',', a, ')');\n  }\n\n  if (a instanceof AnimatedNode) {\n    a = round(multiply(a, 255));\n  } else {\n    a = Math.round(a * 255);\n  }\n\n  return procColor(r, g, b, a);\n}\n"]}